[include mainsail.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.

# See docs/Config_Reference.md for a description of parameters.

[force_move]
enable_force_move: True

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_27001F001251313031373931-if00 #BAK
restart_method: command

[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]

[include macros.cfg]

[include aux_fan.cfg]

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 3500 #3000 #4500
max_z_velocity: 12 #25
max_z_accel: 75 #100

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    140, 110, 20  # an example

[exclude_object]

[input_shaper]
shaper_freq_x: 47.8
shaper_type_x: mzv
shaper_freq_y: 35.6
shaper_type_y: mzv
damping_ratio_x: 0.084
damping_ratio_y: 0.103

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

# Driver0
#[stepper_x]
#step_pin: PF13
#dir_pin: PF12
#enable_pin: !PF14
#microsteps: 16
#rotation_distance: 40
#endstop_pin: PG6
#position_endstop: 0
#position_max: 200
#homing_speed: 50

# Driver1
#[stepper_y]
#step_pin: PG0
#dir_pin: PG1
#enable_pin: !PF15
#microsteps: 16
#rotation_distance: 40
#endstop_pin: PG9
#position_endstop: 0
#position_max: 200
#homing_speed: 50

# # # Driver2
#[stepper_z]
#step_pin: PF11
##dir_pin: PG3
#enable_pin: !PG5
#microsteps: 16
#rotation_distance: 8
#endstop_pin: PG10
#position_endstop: 0.5
#position_max: 200#         
          
# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: PA0
#endstop_pin: PG11
#...

# Driver4
[stepper_x]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 32
endstop_pin: can0: LIMIT_1 # P1.26 for Y-max
position_endstop: 0
position_max: 282 #BAK 350?
homing_speed: 70#50
full_steps_per_rotation:200 #400

#[filament_switch_sensor material_0]
#switch_pin: PG12

# Driver5
[stepper_z]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 2. #8
gear_ratio: 32:19
endstop_pin: probe:z_virtual_endstop #BAK
#position_endstop: 
position_max: 350 #BAK 400?
full_steps_per_rotation:200
position_min: -2

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#microsteps: 128
#rotation_distance: 22.95
#gear_ratio: 50:17
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PA2 #BAK change to 24V
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: PF3
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: -100 #-100 when virtual #0 when normal operation
#max_temp: 260
#full_steps_per_rotation:400
#min_extrude_temp: 0#BAK
#pressure_advance: 0.092 #PETG #0.01 #0.03 #0.04 #0.05 #0.1 good #0.2#0.15 #0.24 

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
[stepper_y]
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
microsteps: 16
rotation_distance: 32
endstop_pin: PG9  # P1.28 for X-max
position_endstop: 0
position_max: 264.5 #267 
homing_speed: 70 #50
full_steps_per_rotation:200 #400


#[filament_switch_sensor material_3]
#switch_pin: PG15

##############
#### fans ####
##############
#[fan] #PCF, second slot
#pin: PE5

#[heater_fan HEF] #HEF first slot
#pin: PA8
#heater: extruder
#heater_temp: 50.

#[heater_fan chamberfan] #third slot
#pin: PD12
#heater: Chamber_heater #turn on chamber fan when bed is on
#heater_temp: 32

#[controller_fan tmc_fan] #for tmc2209s, fourth slot [temperature_fan tmc_fan] for testing
#pin: PD13
#stepper: extruder #stepper_x #turn on tmc2209 fan when bed is on
#max_power: .5
#min_speed: 0
#sensor_type: temperature_host
#min_temp: 0#BAK don't need to change during service
#max_temp: 100
#target_temp: 20 #65
#control: watermark

[temperature_fan RPI] #for RPI
pin: PD14
max_speed: 1.0
min_speed: 0
#sensor_type: raspberry_pi
sensor_type: temperature_host
min_temp: 0#BAK don't need to change during service
max_temp: 100
target_temp: 70
control: watermark
#

#[controller_fan fan5]
#pin: PD15

#[temperature_fan my_temp_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
#sensor_type:
#sensor_pin:
#control:
#pid_Kp:
#pid_Ki:
#pid_Kd:
#pid_deriv_time:
#max_delta:
#min_temp:
#max_temp:
#   See the "extruder" section for a description of the above parameters.
#target_temp: 40.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
#max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
#min_speed: 0.3
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
#gcode_id:
#   If set, the temperature will be reported in M105 queries using the
#   given id. The default is to not report the temperature via M105.


########################################
# TMC2209 configuration
########################################

#[tmc2209 stepper_x]
#uart_pin: PC4
##diag_pin: PG6
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 stepper_y]
#uart_pin: PD11
##diag_pin: PG9
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 stepper_z]
#uart_pin: PC6
##diag_pin: PG10
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2209 stepper_]
#uart_pin: PC7
##diag_pin: PG11
#run_current: 0.650
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PF2
run_current: 1.2 #0.900
#stealthchop_threshold: 0
interpolate: False

[tmc2209 stepper_z]
uart_pin: PE4
run_current: 0.800
#stealthchop_threshold: 0
interpolate: False

#[tmc2209 extruder]
#uart_pin: PE1
#run_current: 0.600
#stealthchop_threshold: 0

[tmc2209 stepper_x]
uart_pin: PD3
run_current: 1.2 #0.900
#stealthchop_threshold: 0
interpolate: False

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch

[bltouch]
sensor_pin: can0: PROBE_2 #BAK from CANBUS instructions
control_pin: can0: PROBE_1
x_offset: 36 #BAK
y_offset: 6 #BAK
#z_offset: 3.4
#speed: 4 #4,5
#lift_speed: 4
samples: 3
samples_result: median
#sample_retract_dist: 4#3.5
samples_tolerance: 0.03 #0.02
samples_tolerance_retries: 4
## If it throws flashing red lights after a probe, enable this setting
probe_with_touch_mode: True #False
stow_on_each_sample: False #True
#pin_up_touch_mode_reports_triggered: False

#[neopixel my_neopixel]
#pin: PB0

[safe_z_home]
home_xy_position: 141, 133.5 # Change coordinates to the center of your print bed X mid=142 Y mid=131, probe offsets X36 Y6 so could be X106 Y125 #114, 144
speed: 65
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

#################
#### heaters ####
#################
[heater_bed]
heater_pin: PA1 #BAK
sensor_type: NTC 100K MGB18-104F39050L32 #BAK ATC Semitec 104GT-2
sensor_pin: PF4 #BAK
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: -100 #BAK -100 when virtual #0 when normal operation
max_temp: 130

#[heater_generic Chamber_heater]
#heater_pin: PA3
#max_power: 1.0
#sensor_type: NTC 100K MGB18-104F39050L32
#sensor_pin: PF7 #PF5
#smooth_time: 2.0
#pwm_cycle_time: 0.3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
#max_delta: 3.0
#min_temp: -100# -100# when virtual #0 when normal operation
#max_temp: 100
#gcode_id: C



#############################
#### temperature sensors ####
#############################

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0 #don't need to change during service
max_temp: 100

#[temperature_sensor raspberry_pi]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[thermistor chambertop]
#temperature1: 30
#resistance1: 8300
#temperature2: 50
#resistance2: 3800
#temperature3: 80
#resistance3: 1350

[temperature_sensor Chamber_Air]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF6
min_temp: -100 #-100 #BAK when virtual #0 when normal operation
max_temp: 100


[bed_screws] #BAK
screw1: 0,32
screw1_name: Front left screw
screw2: 289,32
screw2_name: Front right screw
screw3: 150,190
screw3_name: Rear right screw
#screw4: 168,10
#screw4_name: Front right screw

[screws_tilt_adjust]
screw1:0,15
screw1_name: Front left

screw2: 260,15
screw2_name: Front right

screw3: 124,184
screw3_name: Center back
#...
#   Additional bed leveling screws. At least two screws must be
#   defined.
speed: 70#50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
screw_thread: CW-M4
#   The type of screw used for bed level, M3, M4 or M5 and the
#   direction of the knob used to level the bed, clockwise decrease
#   counter-clockwise decrease.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3, most printers use an M3 screw and
#   turning the knob clockwise decrease distance.]

[bed_mesh]
speed: 90 #80 #60 #100 BAK
horizontal_move_z: 8
mesh_min: 40,7 #BAK for bltouch offset 36,6
mesh_max: 280, 255
mesh_pps: 1,1  
probe_count: 6, 5 #check for positions and make own grid 5
#relative_reference_index: 24
zero_reference_position:  142, 131
algorithm: bicubic #lagrange

#fluidd and mainsail requirements
[pause_resume]

[display_status]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
########################################
#LIGHTS#
########################################
[output_pin LED_pin]
pin: PD15
pwm: True
value: 0
cycle_time: 0.008333 #0.0167

[filament_switch_sensor Filament_sensor]
switch_pin: ^PG12
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament switch runout
insert_gcode:
  M117 Filament switch inserted

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG13
detection_length: 2.88
extruder: extruder
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament encoder runout
insert_gcode:
  M117 Filament encoder inserted




########################################
#MACROS#
########################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    LEDMIN
    G28 ; z align
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1
    BED_MESH_MAP
    BED_MESH_PROFILE LOAD=default

[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=LED_pin VALUE=0

[gcode_macro LEDMIN]
gcode:  SET_PIN PIN=LED_pin VALUE=.1

[gcode_macro LEDMAX]
gcode:  SET_PIN PIN=LED_pin VALUE=0.3

[gcode_macro PRINT_END]    
gcode:
    {% if printer.toolhead.axis_maximum.z - printer.toolhead.position.z > 100 %}
        G1 Z{printer.toolhead.position.z + 100}
    {% else %}
        G1 Z{printer.toolhead.axis_maximum.z - 5}
    {% endif %}
    LEDOFF
    G90 #absolute
    G0 X125 Y259
    M400                 ; Wait for all previous moves to complete
    TURN_OFF_HEATERS
    M84                 ; disable motors
    M107               ; turn off part fan

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.836
#*# pid_ki = 1.324
#*# pid_kd = 98.482
#*#
#*# [Chamber]
#*# control = pid
#*# pid_kp = 18.529
#*# pid_ki = 1.144
#*# pid_kd = 75.043
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.757
#*# pid_ki = 2.453
#*# pid_kd = 427.398
#*#
#*# [Chamber_heater]
#*# control = pid
#*# pid_kp = 17.659
#*# pid_ki = 1.177
#*# pid_kd = 66.222
#*#
#*# [bltouch]
#*# z_offset = 3.580
#*#
#*# [input_shaper]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.013130, -0.036226, -0.104136, -0.019155, 0.064341, 0.157856
#*# 	0.034653, 0.000141, -0.057378, -0.011362, 0.051724, 0.056548
#*# 	0.029829, 0.012759, -0.005796, 0.045786, 0.131509, 0.120005
#*# 	0.017212, -0.004312, -0.003198, 0.102192, 0.176411, 0.178638
#*# 	-0.006167, -0.005054, -0.017671, 0.038735, 0.039106, 0.043931
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 1
#*# min_y = 7.0
#*# x_count = 6
#*# max_y = 255.0
#*# mesh_x_pps = 1
#*# max_x = 280.0
